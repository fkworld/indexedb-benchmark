(function(){"use strict";const _=(e,t)=>t.some(n=>e instanceof n);let I,b;function j(){return I||(I=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function A(){return b||(b=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const B=new WeakMap,E=new WeakMap,p=new WeakMap,l=new WeakMap,m=new WeakMap;function P(e){const t=new Promise((n,o)=>{const i=()=>{e.removeEventListener("success",c),e.removeEventListener("error",r)},c=()=>{n(a(e.result)),i()},r=()=>{o(e.error),i()};e.addEventListener("success",c),e.addEventListener("error",r)});return t.then(n=>{n instanceof IDBCursor&&B.set(n,e)}).catch(()=>{}),m.set(t,e),t}function C(e){if(E.has(e))return;const t=new Promise((n,o)=>{const i=()=>{e.removeEventListener("complete",c),e.removeEventListener("error",r),e.removeEventListener("abort",r)},c=()=>{n(),i()},r=()=>{o(e.error||new DOMException("AbortError","AbortError")),i()};e.addEventListener("complete",c),e.addEventListener("error",r),e.addEventListener("abort",r)});E.set(e,t)}let h={get(e,t,n){if(e instanceof IDBTransaction){if(t==="done")return E.get(e);if(t==="objectStoreNames")return e.objectStoreNames||p.get(e);if(t==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return a(e[t])},set(e,t,n){return e[t]=n,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function N(e){h=e(h)}function V(e){return e===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(t,...n){const o=e.call(w(this),t,...n);return p.set(o,t.sort?t.sort():[t]),a(o)}:A().includes(e)?function(...t){return e.apply(w(this),t),a(B.get(this))}:function(...t){return a(e.apply(w(this),t))}}function O(e){return typeof e=="function"?V(e):(e instanceof IDBTransaction&&C(e),_(e,j())?new Proxy(e,h):e)}function a(e){if(e instanceof IDBRequest)return P(e);if(l.has(e))return l.get(e);const t=O(e);return t!==e&&(l.set(e,t),m.set(t,e)),t}const w=e=>m.get(e);function M(e,t,{blocked:n,upgrade:o,blocking:i,terminated:c}={}){const r=indexedDB.open(e,t),u=a(r);return o&&r.addEventListener("upgradeneeded",s=>{o(a(r.result),s.oldVersion,s.newVersion,a(r.transaction),s)}),n&&r.addEventListener("blocked",s=>n(s.oldVersion,s.newVersion,s)),u.then(s=>{c&&s.addEventListener("close",()=>c()),i&&s.addEventListener("versionchange",d=>i(d.oldVersion,d.newVersion,d))}).catch(()=>{}),u}const W=["get","getKey","getAll","getAllKeys","count"],x=["put","add","delete","clear"],y=new Map;function g(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(y.get(t))return y.get(t);const n=t.replace(/FromIndex$/,""),o=t!==n,i=x.includes(n);if(!(n in(o?IDBIndex:IDBObjectStore).prototype)||!(i||W.includes(n)))return;const c=async function(r,...u){const s=this.transaction(r,i?"readwrite":"readonly");let d=s.store;return o&&(d=d.index(u.shift())),(await Promise.all([d[n](...u),i&&s.done]))[0]};return y.set(t,c),c}N(e=>({...e,get:(t,n,o)=>g(t,n)||e.get(t,n,o),has:(t,n)=>!!g(t,n)||e.has(t,n)}));const S="test-db",T=1,f="test-store",L="2077",D="inside indexed db";async function R(e){const t=await M(S,T,{upgrade(n){n.createObjectStore(f)}});t.put(f,e,L),t.close()}async function k(){const e=await M(S,T,{upgrade(n){n.createObjectStore(f)}}),t=await e.get(f,L);return e.close(),t}self.addEventListener("message",async function(e){if(console.log("start worker:",e.data),e.data.action==="read"){console.time(D);const t=await k();console.timeEnd(D),postMessage(t,[t.buffer])}e.data.action==="write"&&(console.time(D),await R(e.data.data),console.timeEnd(D),postMessage("success"))})})();
